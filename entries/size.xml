<?xml version="1.0"?>
<entry type="method" name="size" return="Integer" deprecated="1.8" removed="3.0">
  <title>.size()</title>
  <signature>
    <added>1.0</added>
  </signature>
  <desc>Return the number of elements in the jQuery object.</desc>
  <longdesc>
    <div class="warning">
      <p>Note: This method has been removed in jQuery 3.0. Use the <code><a href="/length/">.length</a></code> property instead.</p>
    </div>

    <p>The <code>.size()</code> method is functionally equivalent to the <code><a href="/length/">.length</a></code> property; however, <strong>the <code>.length</code> property is preferred</strong> because it does not have the overhead of a function call.</p>
    <p>Given a simple unordered list on the page:</p>
    <pre><code>
&lt;ul&gt;
  &lt;li&gt;foo&lt;/li&gt;
  &lt;li&gt;bar&lt;/li&gt;
&lt;/ul&gt;
    </code></pre>
    <p>Both <code>.size()</code> and <code>.length</code> identify the number of items:</p>
    <pre><code>
alert( "Size: " + $( "li" ).size() );
alert( "Size: " + $( "li" ).length );
    </code></pre>
    <p>This results in two alerts:</p>
    <p>
      <samp>Size: 2</samp>
    </p>
    <p>
      <samp>Size: 2</samp>
    </p>
  </longdesc>
  <example>
    <desc>Count the divs.</desc>
    <code><![CDATA[
$( document.body )
  .click(function() {
    $( this ).append( $( "<div>" ) );
    var n = $( "div" ).size();
    $( "span" ).text( "There are " + n + " divs. Click to add more." );
  })

  // Trigger the click to start
  .click();
]]></code>
  </example>
  <category slug="miscellaneous/dom-element-methods"/>
  <category slug="version/1.0"/>
  <category slug="deprecated/deprecated-1.8"/>
  <category slug="removed"/>
</entry>
