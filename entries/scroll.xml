<?xml version="1.0"?>
<entry type="method" name="scroll" return="jQuery">
  <title>.scroll()</title>
  <desc>Bind an event handler to the "scroll" JavaScript event, or trigger that event on an element.</desc>
  <signature>
    <added>1.0</added>
    <argument name="handler" type="Function">
      <desc>A function to execute each time the event is triggered.</desc>
      <argument name="eventObject" type="Event" />
    </argument>
  </signature>
  <signature>
    <added>1.4.3</added>
    <argument name="eventData" type="Anything" optional="true">
      <desc>An object containing data that will be passed to the event handler.</desc>
    </argument>
    <argument name="handler" type="Function">
      <desc>A function to execute each time the event is triggered.</desc>
      <argument name="eventObject" type="Event" />
    </argument>
  </signature>
  <signature>
    <added>1.0</added>
  </signature>
  <longdesc>
    <p>This method is a shortcut for <code>.on( "scroll", handler )</code> in the first and second variations, and <code>.trigger( "scroll" )</code> in the third.</p>
    <p>The <code>scroll</code> event is sent to an element when the user scrolls to a different place in the element. It applies to <code>window</code> objects, but also to scrollable frames and elements with the <code>overflow </code>CSS property set to <code>scroll</code> (or <code>auto</code> when the element's explicit height or width is less than the height or width of its contents).</p>
    <p>For example, consider the HTML:</p>
    <pre><code>
&lt;div id="target" style="overflow: scroll; width: 200px; height: 100px;"&gt;
  Lorem ipsum dolor sit amet, consectetur adipisicing elit,
  sed do eiusmod tempor incididunt ut labore et dolore magna
  aliqua. Ut enim ad minim veniam, quis nostrud exercitation
  ullamco laboris nisi ut aliquip ex ea commodo consequat.
  Duis aute irure dolor in reprehenderit in voluptate velit
  esse cillum dolore eu fugiat nulla pariatur. Excepteur
  sint occaecat cupidatat non proident, sunt in culpa qui
  officia deserunt mollit anim id est laborum.
&lt;/div&gt;
&lt;div id="other"&gt;
  Trigger the handler
&lt;/div&gt;
&lt;div id="log"&gt;&lt;/div&gt;
</code></pre>
    <p>The style definition is present to make the target element small enough to be scrollable:</p>
    <p class="image">
      <img src="/resources/0042_05_11.png" alt=""/>
    </p>
    <p>The <code>scroll</code> event handler can be bound to this element:</p>
    <pre><code>
$( "#target" ).scroll(function() {
  $( "#log" ).append( "&lt;div&gt;Handler for .scroll() called.&lt;/div&gt;" );
});
    </code></pre>
    <p>Now when the user scrolls the text up or down, one or more messages are appended to <code>&lt;div id="log"&gt;&lt;/div&gt;</code>:</p>
    <p>
      <samp>Handler for .scroll() called.</samp>
    </p>
    <p>To trigger the event manually, apply <code>.scroll()</code> without an argument:</p>
    <pre><code>
$( "#other" ).click(function() {
  $( "#target" ).scroll();
});
    </code></pre>
    <p>After this code executes, clicks on <samp>Trigger the handler</samp> will also append the message.</p>
    <p>A <code>scroll</code> event is sent whenever the element's scroll position changes, regardless of the cause. A mouse click or drag on the scroll bar, dragging inside the element, pressing the arrow keys, or using the mouse's scroll wheel could cause this event.</p>
  </longdesc>
  <note id="detach-shorthand" type="additional" data-event="scroll"/>
  <example>
    <desc>To do something when your page is scrolled:</desc>
    <code><![CDATA[
$( "p" ).clone().appendTo( document.body );
$( "p" ).clone().appendTo( document.body );
$( "p" ).clone().appendTo( document.body );
$( window ).scroll(function() {
  $( "span" ).css( "display", "inline" ).fadeOut( "slow" );
});
]]></code>
    <css><![CDATA[
  div {
    color: blue;
  }
  p {
    color: green;
  }
  span {
    color: red;
    display: none;
  }
]]></css>
    <html><![CDATA[
<div>Try scrolling the iframe.</div>
<p>Paragraph - <span>Scroll happened!</span></p>
]]></html>
  </example>
  <category slug="events/browser-events"/>
  <category slug="version/1.0"/>
  <category slug="version/1.4.3"/>
</entry>
