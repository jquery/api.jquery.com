<?xml version="1.0"?>
<entry type="method" name="nextAll" return="jQuery">
  <title>.nextAll()</title>
  <signature>
    <added>1.2</added>
    <argument name="selector" optional="true" type="String">
      <desc>A string containing a selector expression to match elements against.</desc>
    </argument>
  </signature>
  <desc>Get all following siblings of each element in the set of matched elements, optionally filtered by a selector.</desc>
  <longdesc>
    <p>Given a jQuery object that represents a set of DOM elements, the <code>.nextAll()</code> method allows us to search through the successors of these elements in the DOM tree and construct a new jQuery object from the matching elements.</p>
    <p>The method optionally accepts a selector expression of the same type that we can pass to the <code>$()</code> function. If the selector is supplied, the elements will be filtered by testing whether they match it.</p>
    <p>Consider a page with a simple list on it:</p>
    <pre><code>
&lt;ul&gt;
   &lt;li&gt;list item 1&lt;/li&gt;
   &lt;li&gt;list item 2&lt;/li&gt;
   &lt;li class="third-item"&gt;list item 3&lt;/li&gt;
   &lt;li&gt;list item 4&lt;/li&gt;
   &lt;li&gt;list item 5&lt;/li&gt;
&lt;/ul&gt;
</code></pre>
    <p>If we begin at the third item, we can find the elements which come after it:</p>
    <pre><code>$('li.third-item').nextAll().css('background-color', 'red');</code></pre>
    <p>The result of this call is a red background behind items 4 and 5. Since we do not supply a selector expression, these following elements are unequivocally included as part of the object. If we had supplied one, the elements would be tested for a match before they were included.</p>
  </longdesc>
  <example>
    <desc>Locate all the divs after the first and give them a class.</desc>
    <code><![CDATA[$("div:first").nextAll().addClass("after");]]></code>
    <css><![CDATA[
  div { width: 80px; height: 80px; background: #abc;
        border: 2px solid black; margin: 10px; float: left; }
  div.after { border-color: red; }
  ]]></css>
    <height>150</height>
    <html><![CDATA[<div>first</div>
  <div>sibling<div>child</div></div>
  <div>sibling</div>

  <div>sibling</div>]]></html>
  </example>
  <example>
    <desc>Locate all the paragraphs after the second child in the body and give them a class.</desc>
    <code><![CDATA[
    $(":nth-child(1)").nextAll("p").addClass("after");
]]></code>
    <css><![CDATA[
div, p { width: 60px; height: 60px; background: #abc;
         border: 2px solid black; margin: 10px; float: left; }
.after { border-color: red; }
]]></css>
    <height>200</height>
    <html><![CDATA[<p>p</p>
<div>div</div>
<p>p</p>
<p>p</p>
<div>div</div>

<p>p</p>
<div>div</div>]]></html>
  </example>
  <category slug="traversing/tree-traversal"/>
  <category slug="version/1.2"/>
</entry>