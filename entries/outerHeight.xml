<?xml version="1.0"?>
<entries>
  <desc>Get the current computed height for the first element in the set of matched elements, including padding, border, and optionally margin. Returns a number (without "px") representation of the value or null if called on an empty set of elements.</desc>
<entry type="method" name="outerHeight" return="Number">
  <title>.outerHeight()</title>
  <signature>
    <added>1.2.6</added>
    <argument name="includeMargin" optional="true" type="Boolean">
      <desc>A Boolean indicating whether to include the element's margin in the calculation.</desc>
    </argument>
  </signature>
  <desc>Get the current computed height for the first element in the set of matched elements, including padding, border, and optionally margin. Returns a number (without "px") representation of the value or null if called on an empty set of elements.</desc>
  <longdesc>
    <p>The top and bottom padding and border are always included in the <code>.outerHeight()</code> calculation; if the <code>includeMargin</code> argument is set to <code>true</code>, the margin (top and bottom) is also included.</p>
    <p>This method is not applicable to <code>window</code> and <code>document</code> objects; for these, use <code><a href="/height/">.height()</a></code> instead.</p>
    <p class="image">
      <img src="/resources/0042_04_03.png"/>
    </p>
  </longdesc>
	<note id="dimensions-number" type="additional" data-title=".outerHeight()"/>
  <note id="hidden-element-dimensions" type="additional" data-title=".outerHeight()"/>
  <example>
    <desc>Get the outerHeight of a paragraph.</desc>
    <code><![CDATA[
var p = $( "p:first" );
$( "p:last" ).text(
  "outerHeight:" + p.outerHeight() +
  " , outerHeight( true ):" + p.outerHeight( true ) );
]]></code>
    <css><![CDATA[
  p {
    margin: 10px;
    padding: 5px;
    border: 2px solid #666;
  }
]]></css>
    <html><![CDATA[
<p>Hello</p><p></p>
]]></html>
  </example>
  <category slug="css"/>
  <category slug="dimensions"/>
  <category slug="manipulation/style-properties"/>
  <category slug="version/1.2.6"/>
</entry>

<entry type="method" name="outerHeight" return="jQuery">
  <signature>
    <added>1.8.0</added>
    <argument name="value">
      <type name="String"/>
      <type name="Number"/>
      <desc>A number representing the number of pixels, or a number along with an optional unit of measure appended (as a string).</desc>
    </argument>
  </signature>
  <signature>
    <added>1.8.0</added>
    <argument name="function(index, height)" type="Function">
      <desc>A function returning the outer height to set. Receives the index position of the element in the set and the old outer height as arguments. Within the function, <code>this</code> refers to the current element in the set.</desc>
    </argument>
  </signature>
  <desc>Set the CSS outer Height of each element in the set of matched elements.</desc>
  <longdesc>
    <p>When calling <code>.outerHeight(value)</code>, the value can be either a string (number and unit) or a number. If only a number is provided for the value, jQuery assumes a pixel unit. If a string is provided, however, any valid CSS measurement may be used (such as <code>100px</code>, <code>50%</code>, or <code>auto</code>).</p>
  </longdesc>

  <example>
    <desc>Change the outer height of each div the first time it is clicked (and change its color).</desc>
    <code><![CDATA[
var modHeight = 60;
$( "div" ).one( "click", function() {
  $( this ).outerHeight( modHeight ).addClass( "mod" );
  modHeight -= 8;
});
]]></code>
    <css><![CDATA[
  div {
    width: 50px;
    padding: 10px;
    height: 60px;
    float: left;
    margin: 5px;
    background: red;
    cursor: pointer;
  }
  .mod {
    background: blue;
    cursor: default;
  }
]]></css>
    <html><![CDATA[
<div>d</div>
<div>d</div>
<div>d</div>
<div>d</div>
<div>d</div>
]]></html>
  </example>

  <category slug="css"/>
  <category slug="dimensions"/>
  <category slug="manipulation/style-properties"/>
  <category slug="version/1.8"/>
</entry>
</entries>
