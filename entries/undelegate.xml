<?xml version="1.0"?>
<entry type="method" name="undelegate" return="jQuery">
  <title>.undelegate()</title>
  <desc>Remove a handler from the event for all elements which match the current selector, based upon a specific set of root elements.</desc>
  <signature>
    <added>1.4.2</added>
  </signature>
  <signature>
    <added>1.4.2</added>
    <argument name="selector" type="String">
      <desc>A selector which will be used to filter the event results.</desc>
    </argument>
    <argument name="eventType" type="String">
      <desc>A string containing a JavaScript event type, such as "click" or "keydown"</desc>
    </argument>
  </signature>
  <signature>
    <added>1.4.2</added>
    <argument name="selector" type="String">
      <desc>A selector which will be used to filter the event results.</desc>
    </argument>
    <argument name="eventType" type="String">
      <desc>A string containing a JavaScript event type, such as "click" or "keydown"</desc>
    </argument>
    <argument name="handler" type="Function">
      <desc>A function to execute at the time the event is triggered.</desc>
      <argument name="eventObject" type="Event" />
    </argument>
  </signature>
  <signature>
    <added>1.4.3</added>
    <argument name="selector" type="String">
      <desc>A selector which will be used to filter the event results.</desc>
    </argument>
    <argument name="events" type="PlainObject">
      <desc>An object of one or more event types and previously bound functions to unbind from them.</desc>
    </argument>
  </signature>
  <signature>
    <added>1.6</added>
    <argument name="namespace" type="String">
      <desc>A string containing a namespace to unbind all events from.</desc>
    </argument>
  </signature>
  <longdesc>
    <p>The <code>.undelegate()</code> method is a way of removing event handlers that have been bound using <a href="/delegate/"><code>.delegate()</code></a>. <strong>As of jQuery 1.7</strong>, the <a href="/on/"><code>.on()</code></a> and <a href="/off/"><code>.off()</code></a> methods are preferred for attaching and removing event handlers.</p>
  </longdesc>
  <example>
    <desc>Can bind and unbind events to the colored button.</desc>
    <code><![CDATA[
function aClick() {
  $( "div" ).show().fadeOut( "slow" );
}
$( "#bind" ).click(function() {
  $( "body" )
    .delegate( "#theone", "click", aClick )
    .find( "#theone" ).text( "Can Click!" );
});
$( "#unbind" ).click(function() {
  $( "body" )
    .undelegate( "#theone", "click", aClick )
    .find( "#theone" ).text( "Does nothing..." );
});
]]></code>
    <css><![CDATA[
  button {
    margin: 5px;
  }
  button#theone {
    color: red;
    background: yellow;
  }
]]></css>
    <html><![CDATA[
<button id="theone">Does nothing...</button>
<button id="bind">Bind Click</button>
<button id="unbind">Unbind Click</button>
<div style="display:none;">Click!</div>
]]></html>
  </example>
  <example>
    <desc>To unbind all delegated events from all paragraphs, write:</desc>
    <code><![CDATA[
$( "p" ).undelegate();
]]></code>
  </example>
  <example>
    <desc>To unbind all delegated click events from all paragraphs, write:</desc>
    <code><![CDATA[
$( "p" ).undelegate( "click" );
]]></code>
  </example>
  <example>
    <desc>To undelegate just one previously bound handler, pass the function in as the third argument:</desc>
    <code><![CDATA[
var foo = function () {
  // Code to handle some kind of event
};

// ... Now foo will be called when paragraphs are clicked ...
$( "body" ).delegate( "p", "click", foo );

// ... foo will no longer be called.
$( "body" ).undelegate( "p", "click", foo );
]]></code>
  </example>
  <example>
    <desc>To unbind all delegated events by their namespace:</desc>
    <code><![CDATA[
var foo = function() {
  // Code to handle some kind of event
};

// Delegate events under the ".whatever" namespace
$( "form" ).delegate( ":button", "click.whatever", foo );

$( "form" ).delegate( "input[type='text'] ", "keypress.whatever", foo );

// Unbind all events delegated under the ".whatever" namespace
$( "form" ).undelegate( ".whatever" );
]]></code>
  </example>
  <category slug="events/event-handler-attachment"/>
  <category slug="version/1.4.2"/>
  <category slug="version/1.4.3"/>
  <category slug="version/1.6"/>
</entry>
