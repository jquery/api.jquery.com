<?xml version="1.0"?>
<entry type="method" name="insertBefore" return="jQuery">
  <title>.insertBefore()</title>
  <signature>
    <added>1.0</added>
    <argument name="target">
      <desc>A selector, element, array of elements, HTML string, or jQuery object; the matched set of elements will be inserted before the element(s) specified by this parameter.</desc>
      <type name="Selector"/>
      <type name="htmlString"/>
      <type name="Element"/>
      <type name="Array"/>
      <type name="jQuery"/>
    </argument>
  </signature>
  <desc>Insert every element in the set of matched elements before the target.</desc>
  <longdesc>
    <p>The <code><a href="/before">.before()</a></code> and <code>.insertBefore()</code> methods perform the same task. The major difference is in the syntax-specifically, in the placement of the content and target. With<code> .before()</code>, the selector expression preceding the method is the container before which the content is inserted. With <code>.insertBefore()</code>, on the other hand, the content precedes the method, either as a selector expression or as markup created on the fly, and it is inserted before the target container.</p>
    <p>Consider the following HTML:</p>
    <pre><code>&lt;div class="container"&gt;
  &lt;h2&gt;Greetings&lt;/h2&gt;
  &lt;div class="inner"&gt;Hello&lt;/div&gt;
  &lt;div class="inner"&gt;Goodbye&lt;/div&gt;
&lt;/div&gt;</code></pre>
    <p>We can create content and insert it before several elements at once:</p>
    <pre><code>$('&lt;p&gt;Test&lt;/p&gt;').insertBefore('.inner');</code></pre>
    <p>Each inner <code>&lt;div&gt;</code> element gets this new content:</p>
    <pre><code>&lt;div class="container"&gt;
  &lt;h2&gt;Greetings&lt;/h2&gt;
  &lt;p&gt;Test&lt;/p&gt;
  &lt;div class="inner"&gt;Hello&lt;/div&gt;
  &lt;p&gt;Test&lt;/p&gt;
  &lt;div class="inner"&gt;Goodbye&lt;/div&gt;
&lt;/div&gt;</code></pre>
    <p>We can also select an element on the page and insert it before another:</p>
    <pre><code>$('h2').insertBefore($('.container'));</code></pre>
    <p>If an element selected this way is inserted into a single location elsewhere in the DOM, it will be moved before the target (not cloned) and a new set consisting of the inserted element is returned:</p>
    <pre><code>&lt;h2&gt;Greetings&lt;/h2&gt;
&lt;div class="container"&gt;
  &lt;div class="inner"&gt;Hello&lt;/div&gt;
  &lt;div class="inner"&gt;Goodbye&lt;/div&gt;
&lt;/div&gt;</code></pre>
    <p>If there is more than one target element, however, cloned copies of the inserted element will be created for each target after the first, and that new set (the original element plus clones) is returned.</p>
	<p><strong>Before jQuery 1.9,</strong> the append-to-single-element case did not create a new set, but instead returned the original set which made it difficult to use the <code>.end()</code> method reliably when being used with an unknown number of elements.</p>
  </longdesc>
  <example>
    <desc>Insert all paragraphs before an element with id of "foo". Same as $("#foo").before("p")</desc>
    <code><![CDATA[
$("p").insertBefore("#foo");
]]></code>
    <css><![CDATA[#foo { background:yellow; }]]></css>
    <html><![CDATA[<div id="foo">FOO!</div><p>I would like to say: </p>]]></html>
  </example>
  <category slug="manipulation/dom-insertion-outside"/>
  <category slug="version/1.0"/>
</entry>
