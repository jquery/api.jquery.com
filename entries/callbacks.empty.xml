<?xml version="1.0"?>
<entry name="callbacks.empty" type="method" return="Callbacks">
  <title>callbacks.empty()</title>
  <signature>
    <added>1.7</added>
  </signature>
  <desc>Remove all of the callbacks from a list.</desc>
  <longdesc>
    <p>This method returns the Callbacks object onto which it is attached (<code>this</code>).</p>
  </longdesc>
  <example>
    <desc>Use <code>callbacks.empty()</code> to empty a list of callbacks:</desc>
    <code><![CDATA[
// A sample logging function to be added to a callbacks list
var foo = function( value1, value2 ) {
  console.log( "foo: " + value1 + "," + value2 );
};

// Another function to also be added to the list
var bar = function( value1, value2 ) {
  console.log( "bar: " + value1 + "," + value2 );
};

var callbacks = $.Callbacks();

// Add the two functions
callbacks.add( foo );
callbacks.add( bar );

// Empty the callbacks list
callbacks.empty();

// Check to ensure all callbacks have been removed
console.log( callbacks.has( foo ) );
// false
console.log( callbacks.has( bar ) );
// false
]]></code>
  </example>
  <category slug="callbacks-object"/>
  <category slug="version/1.7"/>
</entry>
