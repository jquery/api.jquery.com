<?xml version="1.0"?>
<entry type="selector" name="nth-child" return="">
  <title>:nth-child() Selector</title>
  <sample>:nth-child(index/even/odd/equation)</sample>
  <signature>
    <added>1.1.4</added>
    <argument name="index" type="Number/String">
      <desc>The index of each child to match, starting with <code>1</code>, the string <code>even</code> or <code>odd</code>, or an equation ( eg. <code>:nth-child(even)</code>, <code>:nth-child(4n)</code> )</desc>
    </argument>
  </signature>
  <desc>Selects all elements that are the nth-child of their parent.</desc>
  <longdesc>
    <p>Because jQuery's implementation of <code>:nth-</code> selectors is strictly derived from the CSS specification, the value of <code>n</code> is "1-indexed", meaning that the counting starts at 1. jQuery methods like <a href="/first/"><code>.first()</code></a> or <a href="/eq/"><code>.eq()</code></a> jQuery follows JavaScript's "0-indexed" counting. Given a single <code>&lt;ul&gt;</code> containing two <code>&lt;li&gt;</code>s, <code>$( "li:nth-child(1)" )</code> selects the first <code>&lt;li&gt;</code> while  <code>$( "li" ).eq( 1 )</code> selects the second.</p>
    <p>The <code>:nth-child(n)</code> pseudo-class is easily confused with the <code>.eq( n )</code> call, even though the two can result in dramatically different matched elements. With <code>:nth-child(n)</code>, all children are counted, regardless of what they are, and the specified element is selected only if it matches the selector attached to the pseudo-class. With the <code>.eq( n )</code> call only the selector attached to the pseudo-class is counted, not limited to children of any other element, and the (n+1)th one (n is 0-based) is selected.</p>
    <p>Further discussion of this unusual usage can be found in the <a href="https://www.w3.org/TR/css3-selectors/#nth-child-pseudo">W3C CSS specification</a>.</p>
  </longdesc>
  <example>
    <desc>Find the second li in each matched ul and note it.</desc>
    <code><![CDATA[
$( "ul li:nth-child(2)" ).append( "<span> - 2nd!</span>" );
]]></code>
    <css><![CDATA[
  div {
    float: left;
  }
  span {
    color: blue;
  }
]]></css>
    <html><![CDATA[
<div>
  <ul>
    <li>John</li>
    <li>Karl</li>
    <li>Brandon</li>
  </ul>
</div>
<div>
  <ul>
    <li>Sam</li>
  </ul>
</div>
<div>
  <ul>
    <li>Glen</li>
    <li>Tane</li>
    <li>Ralph</li>
    <li>David</li>
  </ul>
</div>
]]></html>
  </example>
  <example>
    <desc>This is a playground to see how the selector works with different strings.  Notice that this is different from the <a href="/even/"><code>even</code></a> and <a href="/odd/"><code>odd</code></a> which have no regard for parent and just filter the list of elements to every other one.  The :nth-child, however, counts the index of the child to its particular parent.  In any case, it's easier to see than explain so...</desc>
    <code><![CDATA[
$( "button" ).click(function() {
  var str = $( this ).text();
  var method = $( this ).attr( "data-method" );
  $( "tr" ).css( "background", "white" );
  if ( method ) {
    $( "tr" )[ method ]().css( "background", "#ff0000" );
  } else {
    $( "tr" + str ).css( "background", "#ff0000" );
  }
  $( "#inner" ).text( str );
});
]]></code>
    <css><![CDATA[
  button {
    display: block;
    font-size: 12px;
    width: 100px;
  }
  div {
    float: left;
    margin: 10px;
    font-size: 10px;
    border: 1px solid black;
  }
  span {
    color: blue;
    font-size: 18px;
  }
  #inner {
    color: red;
  }
  td {
    width: 50px;
    text-align: center;
  }
]]></css>
    <html><![CDATA[
<div>
  <button>:nth-child(even)</button>
  <button>:nth-child(odd)</button>
  <button>:nth-child(3n)</button>
  <button>:nth-child(2)</button>
</div>
<div>
  <button>:nth-child(3n+1)</button>
  <button>:nth-child(3n+2)</button>
  <button data-method="even">.even()</button>
  <button data-method="odd">.odd()</button>
</div>

<div>
  <table>
    <tr><td>John</td></tr>
    <tr><td>Karl</td></tr>
    <tr><td>Brandon</td></tr>
    <tr><td>Benjamin</td></tr>
  </table>
</div>
<div>
  <table>
    <tr><td>Sam</td></tr>
  </table>
</div>
<div>
  <table>
    <tr><td>Glen</td></tr>
    <tr><td>Tane</td></tr>
    <tr><td>Ralph</td></tr>
    <tr><td>David</td></tr>
    <tr><td>Mike</td></tr>
    <tr><td>Dan</td></tr>
  </table>
</div>

<span>tr<span id="inner"></span></span>
]]></html>
  </example>
  <category slug="selectors/child-filter-selectors"/>
  <category slug="version/1.1.4"/>
</entry>
