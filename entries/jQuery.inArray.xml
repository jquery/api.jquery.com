<?xml version="1.0"?>
<entry type="method" name="jQuery.inArray" return="Number">
  <title>jQuery.inArray()</title>
  <signature>
    <added>1.2</added>
    <argument name="value" type="Anything">
      <desc>The value to search for.</desc>
    </argument>
    <argument name="array" type="Array">
      <desc>An array through which to search.</desc>
    </argument>
    <argument name="fromIndex" type="Number" optional="true">
      <desc>The index of the array at which to begin the search. The default is 0, which will search the whole array.</desc>
    </argument>
  </signature>
  <desc>Search for a specified value within an array and return its index (or -1 if not found).</desc>
  <longdesc>
    <p>The <code>$.inArray()</code> method is similar to JavaScript's native <code>.indexOf()</code> method in that it returns -1 when it doesn't find a match. If the first element within the array matches <code>value</code>, <code>$.inArray()</code> returns 0.</p>
    <p>Because JavaScript treats 0 as loosely equal to false (i.e. 0 == false, but 0 !== false), if we're checking for the presence of <code>value</code> within <code>array</code>, we need to check if it's not equal to (or greater than) -1.</p>
    <p>The comparison between values is strict.</p>
    <pre><code>$.inArray( 5+5, ["8","9","10", 10+""] );</code></pre>
    <p>Will return <code>-1</code> (not found) because a number is being searched in an array of strings.</p>
  </longdesc>
  <example>
    <desc>Report the index of some elements in the array.</desc>
    <code><![CDATA[
var arr = [ 4, "Pete", 8, "John" ];
var $spans = $( "span" );
$spans.eq( 0 ).text( jQuery.inArray( "John", arr ) );
$spans.eq( 1 ).text( jQuery.inArray( 4, arr ) );
$spans.eq( 2 ).text( jQuery.inArray( "Karl", arr ) );
$spans.eq( 3 ).text( jQuery.inArray( "Pete", arr, 2 ) );
]]></code>
    <css><![CDATA[
  div {
    color: blue;
  }
  span {
    color: red;
  }
]]></css>
    <html><![CDATA[
<div>"John" found at <span></span></div>
<div>4 found at <span></span></div>
<div>"Karl" not found, so <span></span></div>
<div>"Pete" is in the array, but not at or after index 2, so <span></span></div>
]]></html>
  </example>
  <category slug="utilities"/>
  <category slug="version/1.2"/>
</entry>
