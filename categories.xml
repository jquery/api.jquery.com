<?xml version="1.0"?>
<categories>
  <category name="Ajax" slug="ajax">
    <desc><![CDATA[The jQuery library has a full suite of Ajax capabilities. The functions and methods therein allow us to load data from the server without a browser page refresh. ]]></desc>
    <category name="Global Ajax Event Handlers" slug="global-ajax-event-handlers">
      <desc><![CDATA[These methods register handlers to be called when certain events, such as initialization or completion, take place for any Ajax request on the page. The global events are fired on each Ajax request if the <code>global</code> property in <a href="/jQuery.ajaxSetup/"><code>jQuery.ajaxSetup()</code></a> is <code>true</code>, which it is by default. <em>Note: Global events are never fired for cross-domain script or JSONP requests, regardless of the value of <code>global</code>.</em>]]></desc>
    </category>
    <category name="Helper Functions" slug="helper-functions">
      <desc><![CDATA[These functions assist with common idioms encountered when performing Ajax tasks.]]></desc>
    </category>
    <category name="Low-Level Interface" slug="low-level-interface">
      <desc><![CDATA[These methods can be used to make arbitrary Ajax requests.]]></desc>
    </category>
    <category name="Shorthand Methods" slug="shorthand-methods">
      <desc><![CDATA[These methods perform the more common types of Ajax requests in less code.]]></desc>
    </category>
  </category>
  <category name="Attributes" slug="attributes">
    <desc><![CDATA[These methods get and set DOM attributes of elements.]]></desc>
  </category>
  <category name="Callbacks Object" slug="callbacks-object">
    <desc><![CDATA[The <code>jQuery.Callbacks()</code> function, introduced in version 1.7, returns a multi-purpose object that provides a powerful way to manage callback lists. It supports adding, removing, firing, and disabling callbacks.]]></desc>
  </category>
  <category name="Core" slug="core">
    <desc/>
  </category>
  <category name="CSS" slug="css">
    <desc><![CDATA[These methods get and set CSS-related properties of elements.]]></desc>
  </category>
  <category name="Data" slug="data">
    <desc><![CDATA[These methods allow us to associate arbitrary data with specific DOM elements.]]></desc>
  </category>
  <category name="Deferred Object" slug="deferred-object">
    <desc><![CDATA[<p>The Deferred object, introduced in jQuery 1.5, is a chainable utility object created by calling the <a href="/jQuery.Deferred/"><code>jQuery.Deferred()</code></a> method. It can register multiple callbacks into callback queues, invoke callback queues, and relay the success or failure state of any synchronous or asynchronous function.</p>
    <p>The Deferred object is chainable, similar to the way a jQuery object is chainable, but it has its own methods. After creating a Deferred object, you can use any of the methods below by either chaining directly from the object creation or saving the object in a variable and invoking one or more methods on that variable.</p>]]></desc>
  </category>
  <category name="Deprecated" slug="deprecated">
    <desc/>
    <category name="Deprecated 1.3" slug="deprecated-1.3">
      <desc><![CDATA[All the aspects of the API that were deprecated in the corresponding version of jQuery.
        <p>For more information, see the <a href="http://blog.jquery.com/2009/01/14/jquery-1-3-released/">jQuery 1.3 Release Notes</a>.</p>
      ]]></desc>
    </category>
    <category name="Deprecated 1.4" slug="deprecated-1.4">
      <desc><![CDATA[All the aspects of the API that were deprecated in the corresponding version of jQuery.
        <p>For more information, see the <a href="http://jquery14.com/day-01/jquery-14">jQuery 1.4 Release Notes</a></p>
      ]]></desc>
    </category>
    <category name="Deprecated 1.7" slug="deprecated-1.7">
      <desc><![CDATA[All the aspects of the API that were deprecated in the corresponding version of jQuery.
        <p>For more information, see the Release Notes/Changelog at <a href="http://blog.jquery.com/2011/11/03/jquery-1-7-released/">http://blog.jquery.com/2011/11/03/jquery-1-7-released/</a></p>
      ]]></desc>
    </category>
    <category name="Deprecated 1.8" slug="deprecated-1.8">
      <desc><![CDATA[All the aspects of the API that were deprecated in the corresponding version of jQuery.
        <p>For more information, see the Release Notes/Changelog at <a href="http://blog.jquery.com/2012/08/09/jquery-1-8-released/">http://blog.jquery.com/2012/08/09/jquery-1-8-released/</a></p>
      ]]></desc>
    </category>
    <category name="Deprecated 1.10" slug="deprecated-1.10">
      <desc><![CDATA[All the aspects of the API that were deprecated in the corresponding version of jQuery.
        <p>For more information, see the Release Notes/Changelog at <a href="http://blog.jquery.com/2013/05/24/jquery-1-10-0-and-2-0-1-released/">http://blog.jquery.com/2013/05/24/jquery-1-10-0-and-2-0-1-released/</a></p>
      ]]></desc>
    </category>
  </category>
  <category name="Dimensions" slug="dimensions">
	  <desc><![CDATA[These methods are used to get and set the CSS dimensions for the various properties.]]></desc>
  </category>
  <category name="Effects" slug="effects">
    <desc><![CDATA[The jQuery library provides several techniques for adding animation to a web page. These include simple, standard animations that are frequently used, and the ability to craft sophisticated custom effects.]]></desc>
    <category name="Basics" slug="basics">
      <desc/>
    </category>
    <category name="Custom" slug="custom-effects">
      <desc><![CDATA[These methods allow you to create effects that are not provided "out of the box" by jQuery.]]></desc>
    </category>
    <category name="Fading" slug="fading">
      <desc><![CDATA[These methods adjust the opacity of elements.]]></desc>
    </category>
    <category name="Sliding" slug="sliding">
      <desc/>
    </category>
  </category>
  <category name="Events" slug="events">
    <desc><![CDATA[These methods are used to register behaviors to take effect when the user interacts with the browser, and to further manipulate those registered behaviors.]]></desc>
    <category name="Browser Events" slug="browser-events">
      <desc/>
    </category>
    <category name="Document Loading" slug="document-loading">
      <desc/>
    </category>
    <category name="Event Handler Attachment" slug="event-handler-attachment">
      <desc/>
    </category>
    <category name="Event Object" slug="event-object">
      <desc><![CDATA[
        <p>jQuery's event system normalizes the event object according to <a href="http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html">W3C standards</a>. The event object is guaranteed to be passed to the event handler. Most properties from the original event are copied over and normalized to the new event object.</p>
        <div class="longdesc">
          <h4>jQuery.Event Constructor</h4>
          <p>The <code>jQuery.Event</code> constructor is exposed and can be used when calling <a href="/trigger">trigger</a>. The <code>new</code> operator is optional.</p>
          <p>Check <a href="/trigger">trigger</a>'s documentation to see how to combine it with your own event object.</p>
          <p>Example:</p>
          <pre><code>
//Create a new jQuery.Event object without the "new" operator.
var e = jQuery.Event( "click" );

// trigger an artificial click event
jQuery( "body" ).trigger( e );
</code></pre>
          <p>As of jQuery 1.6, you can also pass an object to <code>jQuery.Event()</code> and its properties will be set on the newly created Event object.</p>
          <p>Example:</p>
          <pre><code>
// Create a new jQuery.Event object with specified event properties.
var e = jQuery.Event( "keydown", { keyCode: 64 } );

// trigger an artificial keydown event with keyCode 64
jQuery( "body" ).trigger( e );
</code></pre>
          <h4>Event Properties</h4>
          <p>jQuery normalizes the following properties for cross-browser consistency:</p>
          <ul>
            <li>
              <code>target</code>
            </li>
            <li>
              <code>relatedTarget</code>
            </li>
            <li>
              <code>pageX</code>
            </li>
            <li>
              <code>pageY</code>
            </li>
            <li>
              <code>which</code>
            </li>
            <li>
              <code>metaKey</code>
            </li>
          </ul>
          <p>The following properties are also copied to the event object, though some of their values may be undefined depending on the event:</p>
          <p>altKey, bubbles, button, cancelable, charCode, clientX, clientY, ctrlKey, currentTarget, data, detail, eventPhase, metaKey, offsetX, offsetY, originalTarget, pageX, pageY, prevValue, relatedTarget, screenX, screenY, shiftKey, target, view, which</p>
          <h4>OtherProperties</h4>
          <p>Certain events may have properties specific to them. Those can be accessed as properties of the <code>event.originalEvent</code> object.</p>
          <p>Example:</p>
          <pre><code>
// add the dataTransfer property for use with the native `drop` event
// to capture information about files dropped into the browser window
jQuery.event.props.push( "dataTransfer" );
</code></pre>
        </div>
      ]]></desc>
    </category>
    <category name="Form Events" slug="form-events">
      <desc/>
    </category>
    <category name="Keyboard Events" slug="keyboard-events">
      <desc/>
    </category>
    <category name="Mouse Events" slug="mouse-events">
      <desc/>
    </category>
  </category>
  <category name="Forms" slug="forms">
	  <desc><![CDATA[These methods and event handlers handle forms and their various elements.]]></desc>
  </category>
  <category name="Internals" slug="internals">
    <desc><![CDATA[Although this category is referred to as 'internal', any methods documented within the API site should be considered public and may be freely used. ]]></desc>
  </category>
  <category name="Manipulation" slug="manipulation">
    <desc><![CDATA[All of the methods in this section manipulate the DOM in some manner. A few of them simply change one of the attributes of an element (also listed in the <a href="/category/attributes/">Attributes category</a>), while others set an element's style properties (also listed in the <a href="/category/css/">CSS category</a>). Still others modify entire elements (or groups of elements) themselves&#x2014;inserting, copying, removing, and so on. All of these methods are referred to as "setters," as they change the values of properties.
			A few of these methods&#x2014;such as <code>.attr()</code>, <code>.html()</code>, and <code>.val()</code>&#x2014;also act as "getters," retrieving information from DOM elements for later use.
		]]></desc>
    <category name="Class Attribute" slug="class-attribute">
      <desc><![CDATA[These methods inspect and manipulate the CSS classes assigned to elements.]]></desc>
    </category>
    <category name="Copying" slug="copying">
      <desc><![CDATA[This method allows us to make copies of elements.]]></desc>
    </category>
    <category name="DOM Insertion" slug="dom-insertion">
      <desc/>
    </category>
    <category name="DOM Insertion, Around" slug="dom-insertion-around">
      <desc><![CDATA[These methods allow us to insert new content surrounding existing content.]]></desc>
    </category>
    <category name="DOM Insertion, Inside" slug="dom-insertion-inside">
      <desc><![CDATA[These methods allow us to insert new content inside an existing element.]]></desc>
    </category>
    <category name="DOM Insertion, Outside" slug="dom-insertion-outside">
      <desc><![CDATA[These methods allow us to insert new content outside an existing element.]]></desc>
    </category>
    <category name="DOM Removal" slug="dom-removal">
      <desc><![CDATA[These methods allow us to delete elements from the DOM.]]></desc>
    </category>
    <category name="DOM Replacement" slug="dom-replacement">
      <desc><![CDATA[These methods are used to remove content from the DOM and replace it with new content.]]></desc>
    </category>
    <category name="General Attributes" slug="general-attributes">
      <desc><![CDATA[These methods get and set DOM attributes of elements]]></desc>
    </category>
    <category name="Style Properties" slug="style-properties">
      <desc><![CDATA[These methods get and set CSS-related properties of elements.]]></desc>
    </category>
  </category>
  <category name="Miscellaneous" slug="miscellaneous">
    <desc/>
    <category name="Collection Manipulation" slug="collection-manipulation">
      <desc/>
    </category>
    <category name="Data Storage" slug="data-storage">
      <desc><![CDATA[These methods allow us to associate arbitrary data with specific DOM elements.]]></desc>
    </category>
    <category name="DOM Element Methods" slug="dom-element-methods">
      <desc/>
    </category>
    <category name="Setup Methods" slug="setup-methods">
      <desc/>
    </category>
  </category>
  <category name="Offset" slug="offset">
    <desc/>
  </category>
  <category name="Properties" slug="properties">
    <desc/>
    <category name="Properties of jQuery Object Instances" slug="jquery-object-instance-properties">
      <desc><![CDATA[Each jQuery object created with the jQuery() function contains a number of properties alongside its methods. These properties allow us to inspect various attributes of the object.]]></desc>
    </category>
    <category name="Properties of the Global jQuery Object" slug="global-jquery-object-properties">
      <desc><![CDATA[These properties are associated with the global jQuery object.]]></desc>
    </category>
  </category>
  <category name="Removed" slug="removed">
    <desc></desc>
  </category>
  <category name="Selectors" slug="selectors">
    <desc><![CDATA[
      <p>Borrowing from CSS 1&#x2013;3, and then adding its own, jQuery offers a powerful set of tools for matching a set of elements in a document.</p>
      <p>To use any of the meta-characters ( such as <code> !"#$%&amp;'()*+,./:;&lt;=&gt;?@[\]^`{|}~</code> ) as a literal part of a name, it must be escaped with with two backslashes: <code>\\</code>. For example, an element with <code>id="foo.bar"</code>, can use the selector <code>$("#foo\\.bar")</code>. The W3C CSS specification contains the <a href="http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier">complete set of rules regarding valid CSS selectors</a>. Also useful is the blog entry by Mathias Bynens on <a href="http://mathiasbynens.be/notes/css-escapes">CSS character escape sequences for identifiers</a>.</p>
    ]]></desc>
    <category name="Attribute" slug="attribute-selectors">
      <desc><![CDATA[
        <p>The CSS specification allows elements to be identified by their attributes. While not supported by some older browsers for the purpose of styling documents, jQuery allows you to employ them regardless of the browser being used.</p>
        <p>When using any of the following attribute selectors, you should account for attributes that have multiple, space-separated values. Since these selectors see attribute values as a single string, this selector, for example, <code>$("a[rel='nofollow']")</code>, will select <code>&lt;a href="example.html" rel="nofollow"&gt;Some text&lt;/a&gt;</code> but not <code>&lt;a href="example.html" rel="nofollow foe"&gt;Some text&lt;/a&gt;</code>.</p>
        <p>Attribute values in selector expressions <b>must</b> follow the rules for W3C CSS selectors; in general, that means anything other than a <a href="http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier">valid identifier</a> should be surrounded by quotation marks.</p>
        <ul>
          <li>double quotes inside single quotes: <code>$('a[rel="nofollow self"]')</code></li>
          <li>single quotes inside double quotes: <code>$("a[rel='nofollow self']")</code></li>
          <li>escaped single quotes inside single quotes: <code>$('a[rel=\'nofollow self\']')</code></li>
          <li>escaped double quotes inside double quotes: <code>$("a[rel=\"nofollow self\"]")</code></li>
        </ul>
        <p>The variation you choose is generally a matter of style or convenience.</p>

        <p><strong>Note</strong>: In jQuery 1.3 <code>[@attr]</code> style selectors were removed (they were previously deprecated in jQuery 1.2). Simply remove the "@" symbol from your selectors in order to make them work again.</p>
        ]]>
      </desc>
    </category>
    <category name="Basic" slug="basic-css-selectors">
      <desc><![CDATA[The following selectors are based on the Cascading Style Sheet 1 specification, as outlined by the W3C. For more information about the specifications, visit <a href="http://www.w3.org/Style/CSS/#specs">http://www.w3.org/Style/CSS/#specs</a>. ]]></desc>
    </category>
    <category name="Basic Filter" slug="basic-filter-selectors">
      <desc/>
    </category>
    <category name="Child Filter" slug="child-filter-selectors">
      <desc/>
    </category>
    <category name="Content Filter" slug="content-filter-selector">
      <desc/>
    </category>
    <category name="Form" slug="form-selectors">
      <desc/>
    </category>
    <category name="Hierarchy" slug="hierarchy-selectors">
      <desc/>
    </category>
    <category name="jQuery Extensions" slug="jquery-selector-extensions">
      <desc><![CDATA[jQuery has extended the CSS3 selectors with the following selectors.  Because these selectors are jQuery extension and not part of the CSS specification, queries using them cannot take advantage of the performance boost provided by the native DOM <code>querySelectorAll()</code> method. To achieve the best performance when using these selectors, first select some elements using a pure CSS selector, then use <a href="http://api.jquery.com/filter/"><code>.filter()</code></a>.]]></desc>
    </category>
    <category name="Visibility Filter" slug="visibility-filter-selectors">
      <desc/>
    </category>
  </category>
  <category name="Traversing" slug="traversing">
    <desc/>
    <category name="Filtering" slug="filtering">
      <desc/>
    </category>
    <category name="Miscellaneous Traversing" slug="miscellaneous-traversal">
      <desc/>
    </category>
    <category name="Tree Traversal" slug="tree-traversal">
      <desc/>
    </category>
  </category>
  <category name="Uncategorized" slug="uncategorized"/>
  <category name="Utilities" slug="utilities">
    <desc/>
  </category>
  <category name="Version" slug="version">
    <desc/>
    <category name="Version 1.0" slug="1.0">
      <desc><![CDATA[All the aspects of the API that were added, or had a new signature added, in the corresponding version of jQuery.
				<a href="http://blog.jquery.com/2006/08/26/jquery-10/">jQuery 1.0 Release Notes</a>.
			]]></desc>
    </category>
    <category name="Version 1.0.4" slug="1.0.4">
      <desc><![CDATA[All the aspects of the API that were added, or had a new signature added, in the corresponding version of jQuery.
				Release Notes: <a href="http://blog.jquery.com/2006/08/31/jquery-101/">1.0.1</a>, <a href="http://blog.jquery.com/2006/10/09/jquery-102/">1.0.2</a>, <a href="http://blog.jquery.com/2006/10/27/jquery-103/">1.0.3</a>, <a href="http://blog.jquery.com/2006/12/12/jquery-104/">1.0.4</a>.
			]]></desc>
    </category>
    <category name="Version 1.1" slug="1.1">
      <desc><![CDATA[All the aspects of the API that were added, or had a new signature added, in the corresponding version of jQuery.
				<a href="http://blog.jquery.com/2007/01/14/jquery-birthday-11-new-site-new-docs/">jQuery 1.1 Release Notes</a>.
			]]></desc>
    </category>
    <category name="Version 1.1.2" slug="1.1.2">
      <desc><![CDATA[All the aspects of the API that were added, or had a new signature added, in the corresponding version of jQuery.
				<a href="http://blog.jquery.com/2007/02/27/jquery-112/">jQuery 1.1.2 Release Notes</a>.
			]]></desc>
    </category>
    <category name="Version 1.1.3" slug="1.1.3">
      <desc><![CDATA[All the aspects of the API that were added, or had a new signature added, in the corresponding version of jQuery.
				<a href="http://blog.jquery.com/2007/07/01/jquery-113-800-faster-still-20kb/">jQuery 1.1.3 Release Notes</a>
			]]></desc>
    </category>
    <category name="Version 1.1.4" slug="1.1.4">
      <desc><![CDATA[All the aspects of the API that were added, or had a new signature added, in the corresponding version of jQuery.
				<a href="http://blog.jquery.com/2007/08/24/jquery-114-faster-more-tests-ready-for-12/">jQuery 1.1.4 Release Notes</a>.
			]]></desc>
    </category>
    <category name="Version 1.2" slug="1.2">
      <desc><![CDATA[All the aspects of the API that were added, or had a new signature added, in the corresponding version of jQuery.
				<a href="http://blog.jquery.com/2007/09/10/jquery-1-2-released/">jQuery 1.2 Release Notes</a>
			]]></desc>
    </category>
    <category name="Version 1.2.3" slug="1.2.3">
      <desc><![CDATA[All the aspects of the API that were added, or had a new signature added, in the corresponding version of jQuery.
				Release Notes: <a href="http://blog.jquery.com/2007/09/16/jquery-1-2-1-released/">1.2.1</a>, <a href="http://blog.jquery.com/2008/01/14/jquery-1-2-2-released/">1.2.2</a>, <a href="http://blog.jquery.com/2008/02/07/jquery-1-2-3-released/">1.2.3</a>.
			]]></desc>
    </category>
    <category name="Version 1.2.6" slug="1.2.6">
      <desc><![CDATA[All the aspects of the API that were added, or had a new signature added, in the corresponding version of jQuery.
				<a href="http://blog.jquery.com/2008/05/24/jquery-1-2-6-released/">jQuery 1.2.6 Release Notes</a>.
			]]></desc>
    </category>
    <category name="Version 1.3" slug="1.3">
      <desc><![CDATA[All the aspects of the API that were added, or had a new signature added, in the corresponding version of jQuery.
				Release Notes: <a href="http://blog.jquery.com/2009/01/14/jquery-1-3-released/">1.3</a>, <a href="http://blog.jquery.com/2009/01/21/jquery-131-released/">1.3.1</a>, <a href="http://blog.jquery.com/2009/02/20/jquery-1-3-2-released/">1.3.2</a>
			]]></desc>
    </category>
    <category name="Version 1.4" slug="1.4">
      <desc><![CDATA[All the aspects of the API that were added, or had a new signature added, in the corresponding version of jQuery.
				<a href="http://jquery14.com/day-01/jquery-14">jQuery 1.4 Release Notes</a>.
			]]></desc>
    </category>
    <category name="Version 1.4.1" slug="1.4.1">
      <desc><![CDATA[All the aspects of the API that were added, or had a new signature added, in the corresponding version of jQuery.
				<a href="http://jquery14.com/day-12/jquery-141-released">jQuery 1.4.1 Release Notes</a>.
			]]></desc>
    </category>
    <category name="Version 1.4.2" slug="1.4.2">
      <desc><![CDATA[All the aspects of the API that were added, or had a new signature added, in the corresponding version of jQuery.
				<a href="http://blog.jquery.com/2010/02/19/jquery-142-released/">jQuery 1.4.2 Release Notes</a>.
			]]></desc>
    </category>
    <category name="Version 1.4.3" slug="1.4.3">
      <desc><![CDATA[All the aspects of the API that were added, or had a new signature added, in the corresponding version of jQuery.
				<a href="http://blog.jquery.com/2010/10/16/jquery-143-released/">jQuery 1.4.3 Release Notes</a>.
			]]></desc>
    </category>
    <category name="Version 1.4.4" slug="1.4.4">
      <desc><![CDATA[All the aspects of the API that were added, or had a new signature added, in the corresponding version of jQuery. <a href="http://blog.jquery.com/2010/11/11/jquery-1-4-4-release-notes/">jQuery 1.4.4 Release Notes</a>.]]></desc>
    </category>
    <category name="Version 1.5" slug="1.5">
      <desc><![CDATA[
        <p>All the aspects of the API that were added, or had a new signature added, in the corresponding version of jQuery.</p>
        <p>jQuery 1.5 also includes a large rewrite of the Ajax module, which has a number of extensibility improvements. You can find out more about those improvements in the <a href="http://api.jquery.com/extending-ajax/">Extending Ajax</a> documentation.</p>
        <p>Additionally jQuery 1.5 includes a new Deferred callback management system you can learn more about in in the <a href="http://api.jquery.com/category/deferred-object/">Deferred Object</a> documentation.</p>
      ]]></desc>
    </category>
    <category name="Version 1.5.1" slug="1.5.1">
      <desc><![CDATA[Aspects of the API that were changed in the corresponding version of jQuery. API changes in jQuery 1.5.1 dealt primarily with jQuery.ajax settings and jQuery.support properties.]]></desc>
    </category>
    <category name="Version 1.6" slug="1.6">
      <desc><![CDATA[All the aspects of the API that were added, or had a new signature added, in the corresponding version of jQuery.]]></desc>
    </category>
    <category name="Version 1.7" slug="1.7">
      <desc><![CDATA[
        <p>Aspects of the API that were changed in the corresponding version of jQuery. API changes in jQuery 1.7.0 dealt primarily with the new
				Event APIs: <code>.on()</code> and <code>.off()</code>
				Better Support for HTML5 in IE6/7/8
				<code>jQuery.Callbacks()</code>
				Toggling Animations Work Intuitively
				</p>
        <p>For more information, see the Release Notes/Changelog at <a href="http://blog.jquery.com/2011/11/03/jquery-1-7-released/">http://blog.jquery.com/2011/11/03/jquery-1-7-released/</a></p>
        <hr/>
      ]]></desc>
    </category>
    <category name="Version 1.8" slug="1.8">
      <desc><![CDATA[
        <p>Aspects of the API that were changed in the corresponding version of jQuery. API changes in jQuery 1.8.0 dealt primarily with animations and the removal of some methods such as <code>deferred.isResolved()</code>, <code>deferred.isRejected()</code>, <code>$.curCSS()</code>, <code>$.attrFn()</code>, and <code>$(element).closest(Array)</code> returning Array.
        </p>
        <p>For more information, see the Release Notes/Changelog at <a href="http://blog.jquery.com/2012/08/09/jquery-1-8-released/">http://blog.jquery.com/2012/08/09/jquery-1-8-released/</a></p>
        <hr/>
      ]]></desc>
    </category>
    <category name="Version 1.9" slug="1.9">
      <desc><![CDATA[
        <p>Aspects of the API that were changed in the corresponding version of jQuery. Changes in jQuery 1.9 dealt primarily removal or modification of several APIs that behaved inconsistently or inefficiently in the past. A <a href="https://github.com/jquery/jquery-migrate">jQuery Migrate Plugin</a> was offered to help developers with a transitional upgrade path.
        </p>
        <p>For more information, see the <a href="http://jquery.com/upgrade-guide/1.9/">jQuery Core 1.9 Upgrade guide</a> and the <a href="http://blog.jquery.com/2013/01/15/jquery-1-9-final-jquery-2-0-beta-migrate-final-released/">Release Notes/Changelog</a></p>
        <hr/>
      ]]></desc>
    </category>
    <category name="All" slug="all"/>
  </category>
</categories>
